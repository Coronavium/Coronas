project(project_dash_dart_impl_gaspi)

# Library name
set(DASH_DART_IMPL_GASPI_LIBRARY dart-gaspi)
set(DASH_DART_BASE_LIBRARY dart-base)

include(${CMAKE_SOURCE_DIR}/CMakeExt/GASPI.cmake)

# Source- and header files to be compiled (OBJ):
file(GLOB_RECURSE DASH_DART_IMPL_GASPI_SOURCES "src/*.c" "src/*.h" "src/*.cc")
file(GLOB_RECURSE DASH_DART_IMPL_GASPI_HEADERS "include/*.h")

# Load global build settings
set(DASH_DART_IF_INCLUDE_DIR ${DASH_DART_IF_INCLUDE_DIR}
    PARENT_SCOPE)
set(ENABLE_DART_LOGGING ${ENABLE_DART_LOGGING}
    PARENT_SCOPE)
set(ENABLE_DEFAULT_INDEX_TYPE_LONG ${ENABLE_DEFAULT_INDEX_TYPE_LONG}
    PARENT_SCOPE)
set(ENABLE_SCALAPACK ${ENABLE_SCALAPACK}
    PARENT_SCOPE)
set(ENABLE_LIBNUMA ${ENABLE_LIBNUMA}
    PARENT_SCOPE)
set(ENABLE_HWLOC ${ENABLE_HWLOC}
    PARENT_SCOPE)
set(ENABLE_LIKWID ${ENABLE_LIKWID}
    PARENT_SCOPE)
set(ENABLE_PAPI ${ENABLE_PAPI}
    PARENT_SCOPE)

message("Use compiler: " "${CC}")
message("-- GASPI include path: " "${GASPI_INCLUDE_PATH}")



# Logging compile flags
#
if (ENABLE_DART_LOGGING)
  set (ADDITIONAL_COMPILE_FLAGS
       ${ADDITIONAL_COMPILE_FLAGS} -DDASH_ENABLE_LOGGING)
  set (ADDITIONAL_COMPILE_FLAGS
       ${ADDITIONAL_COMPILE_FLAGS} -DDART_ENABLE_LOGGING)
endif()

# Features compile flags
#
if (PAPI_FOUND AND ENABLE_PAPI)
  set (ADDITIONAL_COMPILE_FLAGS
       ${ADDITIONAL_COMPILE_FLAGS} -DDART_ENABLE_PAPI)
  set (ADDITIONAL_INCLUDES ${ADDITIONAL_INCLUDES}
       ${PAPI_INCLUDE_DIRS})
  set (ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES}
       ${PAPI_LIBRARIES})
endif()
if (HWLOC_FOUND AND ENABLE_HWLOC)
  set (ADDITIONAL_COMPILE_FLAGS
       ${ADDITIONAL_COMPILE_FLAGS} -DDART_ENABLE_HWLOC)
  set (ADDITIONAL_INCLUDES ${ADDITIONAL_INCLUDES}
       ${HWLOC_INCLUDE_DIRS})
  set (ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES}
       ${HWLOC_LIBRARIES})
endif()
if (LIKWID_FOUND AND ENABLE_LIKWID)
  set (ADDITIONAL_COMPILE_FLAGS
       ${ADDITIONAL_COMPILE_FLAGS} -DDART_ENABLE_LIKWID)
  set (ADDITIONAL_INCLUDES ${ADDITIONAL_INCLUDES}
       ${LIKWID_INCLUDE_DIRS})
  set (ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES}
       ${LIKWID_LIBRARIES})
endif()
if (NUMA_FOUND AND ENABLE_LIBNUMA)
  set (ADDITIONAL_COMPILE_FLAGS
       ${ADDITIONAL_COMPILE_FLAGS} -DDART_ENABLE_NUMA)
  set (ADDITIONAL_INCLUDES ${ADDITIONAL_INCLUDES}
       ${NUMA_INCLUDE_DIRS})
  set (ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES}
       ${NUMA_LIBRARIES})
endif()

set (ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES} rt)

message (STATUS "DART additional compile flags:")
set(ADDITIONAL_COMPILE_FLAGS_STR "")
foreach (ADDITIONAL_FLAG ${ADDITIONAL_COMPILE_FLAGS})
  message (STATUS "    " ${ADDITIONAL_FLAG})
  set(ADDITIONAL_COMPILE_FLAGS_STR
      "${ADDITIONAL_COMPILE_FLAGS_STR} ${ADDITIONAL_FLAG}")
endforeach()
message (STATUS "DART additional libraries:")
foreach (ADDITIONAL_LIB ${ADDITIONAL_LIBRARIES})
  message (STATUS "    " ${ADDITIONAL_LIB})
endforeach()

## Build targets

# Directories containing the implementation of the library (-I):
set(DASH_DART_IMPL_GASPI_INCLUDE_DIRS
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  ${CMAKE_CURRENT_SOURCE_DIR}/src
)

include_directories(
	${DASH_DART_IMPL_GASPI_INCLUDE_DIRS}
	${GASPI_INCLUDE_PATH}
	${DASH_DART_IF_INCLUDE_DIR}
	${DASH_DART_BASE_INCLUDE_DIR}
	${ADDITIONAL_INCLUDES}
)
# Library compilation sources
add_library(
	${DASH_DART_IMPL_GASPI_LIBRARY} # library name
	${DASH_DART_IMPL_GASPI_SOURCES} # sources
	${DASH_DART_IMPL_GASPI_HEADERS} # headers  
)

# Link dependencies
target_link_libraries(
  ${DASH_DART_IMPL_GASPI_LIBRARY}
  ${PRELOADED_LIBRARIES}
  ${GASPI_C_LIBRARIES}
  ${DASH_DART_BASE_LIBRARY}
  ${ADDITIONAL_LIBRARIES}
)

if(GASPI_COMPILE_FLAGS)
  set_target_properties(
    ${DASH_DART_IMPL_GASPI_LIBRARY} PROPERTIES
    COMPILE_FLAGS "${GASPI_COMPILE_FLAGS}")
endif()

if(GASPI_LINK_FLAGS)
  set_target_properties(
    ${DASH_DART_IMPL_GASPI_LIBRARY} PROPERTIES
    LINK_FLAGS "${GASPI_LINK_FLAGS}")
endif()

# Compile flags
set_target_properties(
  ${DASH_DART_IMPL_GASPI_LIBRARY} PROPERTIES
  COMPILE_FLAGS ${ADDITIONAL_COMPILE_FLAGS_STR}
  C_STANDARD ${DART_C_STD_PREFERED}
  C_STANDARD_REQUIRED ON
)

if(BUILD_DART_GASPI_TESTS)
    add_subdirectory(test)
endif()

## Installation

DeployLibrary(${DASH_DART_IMPL_GASPI_LIBRARY})

# Headers
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/dash
        DESTINATION include FILES_MATCHING PATTERN "*.h")
# Generated headers, if any
# install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/include/dash
#         DESTINATION include FILES_MATCHING PATTERN "*.h")
# Library
install(TARGETS ${DASH_DART_IMPL_GASPI_LIBRARY} DESTINATION lib)

