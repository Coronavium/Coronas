#
# In-place makefile for use side-by-side with the
# CMake build system
#

DASH_ROOT_REL = $(shell pwd)/../..
DASH_ROOT = $(shell cd $(DASH_ROOT_REL);pwd)

include $(DASH_ROOT)/make.defs

ifeq ($(DART_IMPL), mpi)
     CFLAGS+=-DDART_MPI
endif
ifeq ($(DART_IMPL), shmem)
     CFLAGS+=-DDART_SHMEM
endif

CFLAGS+=-DDASH_ENABLE_DEFAULT_INDEX_TYPE_LONG
CFLAGS+=-std=c++14

#CFLAGS+=-DDASH_DEBUG

LIBDASH   = $(DASH_ROOT)/src/libdash.a
DASH_INC  = $(DASH_ROOT)/include/

LIBIPM_DIR = $(DASH_ROOT)/../ipm/src
LIBIPM     = $(LIBIPM_DIR)/libipm.a

PWD  = $(shell basename `pwd`)
PAT  = $(shell echo -n $(PWD) )
PROG = $(shell echo -n $(PAT) | cut -d . -f 3)

all : regular

ipm : with-ipm

regular : $(LIBDART) $(LIBDASH) $(PROG)
with-ipm: $(LIBDART) $(LIBDASH) $(LIBIPM) $(PROG).ipm

printenv :
	 @echo "CXX           = $(CXX)"
	 @echo "CFLAGS        = $(CFLAGS)"
	 @echo "LFLAGS        = $(LFLAGS)"
	 @echo "DASH_ROOT     = $(DASH_ROOT)"
	 @echo "LIBDASH       = $(LIBDASH)"
	 @echo "DART_IMPL     = $(DART_IMPL)"
	 @echo "LIBDART       = $(LIBDART)"
	 @echo "LIBDART_EXTRA = $(LIBDART_EXTRA)"
	 @echo "DASH_INC      = $(DASH_INC)"


$(LIBDASH) :
	make OPT_FLAGS="$(OPT_FLAGS)" -C $(DASH_ROOT)/src

$(LIBDART) :
	make OPT_FLAGS="$(OPT_FLAGS)" -C $(LIBDART_DIR)

$(LIBIPM) :
	make OPT_FLAGS="$(OPT_FLAGS)" -C $(LIBIPM_DIR)

$(PROG) : main.o
	$(CXX) $(LFLAGS) -o $@ $+ $(LIBDASH) $(LIBDART) $(LIBDART_EXTRA)

$(PROG).ipm : main.o
	$(CXX) $(LFLAGS) -o $@ $+ $(LIBDASH) $(LIBDART) $(LIBDART_EXTRA) $(LIBIPM)

%.o 	: %.cpp
	$(CXX) -c $(CFLAGS) -I$(DART_INC) -I$(DASH_INC) $+

clean :
	rm -f *.o *~
	rm -f $(PROG)
	rm -f $(PROG).ipm
	rm -f *.ipm.xml
	rm -f *.trace.*.txt


# clean dash lib and dart lib too
fresh : clean
	make -C $(DASH_ROOT)/src clean
	make -C $(LIBDART_DIR) clean
	make -C $(LIBIPM_DIR) clean
